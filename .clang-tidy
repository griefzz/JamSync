---
# Configure clang-tidy for this project.
Checks: >
  -*,
  bugprone-*,
  modernize-*,
  performance-*,
  portability-*,
  readability-*,
  clang-analyzer-*,
  cert-*,
  concurrency-*,
  cppcoreguidelines-*,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-avoid-const-or-ref-data-members,
  -cppcoreguidelines-special-member-functions,
  -cppcoreguidelines-pro-type-union-access,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -cppcoreguidelines-macro-usage,
  -bugprone-easily-swappable-parameters,
  -cert-dcl58-cpp,
  -misc-include-cleaner,
  -misc-unused-parameters,
  -misc-non-private-member-variables-in-classes,
  -readability-implicit-bool-conversion,
  -readability-else-after-return,
  -readability-isolate-declaration,
  -readability-identifier-length,
  -readability-named-parameter,
  -readability-braces-around-statements,
  -readability-magic-numbers,
  -cppcoreguidelines-avoid-magic-numbers

# Turn all the warnings from the checks above into errors.
WarningsAsErrors: "*"

HeaderFilterRegex: '(src|include)\/.*\.(hpp|cpp)$'

CheckOptions:
  - { key: readability-identifier-naming.ClassCase,            value: CamelCase  }
  - { key: readability-identifier-naming.StructCase,           value: CamelCase  }
  - { key: readability-identifier-naming.EnumCase,             value: CamelCase  }
  - { key: readability-identifier-naming.MacroDefinitionCase,  value: UPPER_CASE }
  - { key: readability-identifier-naming.VariableCase,         value: aNy_CasE   }
  - { key: readability-identifier-naming.VariableNamingStyle,  value: lower_case }